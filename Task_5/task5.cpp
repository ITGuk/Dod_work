//ѕеретворити масив Ц переставити м≥сц€ми його елементи так, щоб в перш≥й його половин≥
//були розм≥щен≥ елементи, що сто€ли в непарних позиц≥€х, а в друг≥й половин≥ Ц елементи,
//що сто€ли в парних позиц≥€х.

#include <iostream>
using namespace std;

int main()
{
    const int SIZE = 15;
    int arr[SIZE] = {};//массив з €кого беремо парн≥ ≥ не парн≥ числа
    int arr_nepar[SIZE] = {};//тимчасовий массив дл€ непарних чисел
    int arr_par[SIZE] = {};//тимчасовий массив дл€ парних чисел
    int zagal[SIZE] = {};//массив в €кому вже в≥дсортован≥ числа 
    if (SIZE % 2 != 0)
    {
        for (int i = 0; i < SIZE; i++)
        {
            arr[i] = i;//наповненн€ массиву
        }

        for (int i = 0; i < SIZE; i++)
        {
            cout << arr[i] << " ";//вив≥д нев≥дсортованого масиву
        }
        cout << endl;
        int j = 0;//л≥чильник дл€ проходженн€ циклу пошуку непарних чисел
        for (int i = 0; i < SIZE; i++)
        {
            if (arr[i] % 2 != 0)
            {
                arr_nepar[j] = i;//наповненн€ тимчасового масива непарними елементами
                j++;
            }
        }
        int j1 = 0;//л≥чильник дл€ проходженн€ циклу пошуку парних чисел
        for (int i = 0; i < SIZE; i++)
        {
            if (arr[i] % 2 == 0)
            {
                arr_par[j1] = i;//наповненн€ тимчасового масива парними елементами
                j1++;
            }
        }
        int k = 0;
        for (int i = 0; i < SIZE / 2; i++)
        {
            zagal[k++] = arr_nepar[i];//наповнюЇм початок масиву непарними елементами
        }
        for (int i = 0; i <= SIZE / 2; i++)
        {
            zagal[k++] = arr_par[i];//наповнюЇм другу половину масиву парними елементами
        }
        for (int i = 0; i < SIZE; i++)
        {
            cout << zagal[i] << " ";//вив≥д в≥дсортованого масиву
        }
    }
}